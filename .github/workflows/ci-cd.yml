name: MLOps CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
        
    - name: Setup DVC
      run: |
        dvc remote modify myremote region ap-south-1
        
    - name: Pull data from DVC
      run: dvc pull -v
      
    - name: Run ML Pipeline
      run: dvc repro -v
      
    - name: Validate Model Performance
      id: validation
      run: |
        python src/validate_model.py
        echo "validation_status=$?" >> $GITHUB_OUTPUT
      continue-on-error: true
      
    - name: Check Validation Result
      if: steps.validation.outputs.validation_status != '0'
      run: |
        echo "⚠️  Model validation failed!"
        echo "New model did not meet performance criteria."
        echo "Pipeline will not deploy this model."
        exit 1
        
    - name: Push artifacts to DVC
      if: success()
      run: dvc push
      
    - name: Build Docker image
      if: success()
      run: |
        echo "Building Docker image with version metadata..."
        
        # Read model metrics using Python (not jq)
        MODEL_R2=$(python3 -c "import json; print(json.load(open('metrics/metrics.json'))['r2'])")
        
        echo "Building with:"
        echo "  Git Commit: ${{ github.sha }}"
        echo "  Build Time: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        echo "  Model R²: ${MODEL_R2}"
        
        docker build \
          --build-arg GIT_COMMIT=${{ github.sha }} \
          --build-arg BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg MODEL_VERSION="r2-${MODEL_R2}" \
          -t volunteer-predictor .
        
        docker tag volunteer-predictor:latest 632676638228.dkr.ecr.ap-south-1.amazonaws.com/volunteer-predictor:latest
        docker tag volunteer-predictor:latest 632676638228.dkr.ecr.ap-south-1.amazonaws.com/volunteer-predictor:${{ github.sha }}
        
    - name: Login to Amazon ECR
      if: success()
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 632676638228.dkr.ecr.ap-south-1.amazonaws.com
        
    - name: Push to ECR
      if: success()
      run: |
        docker push 632676638228.dkr.ecr.ap-south-1.amazonaws.com/volunteer-predictor:latest
        docker push 632676638228.dkr.ecr.ap-south-1.amazonaws.com/volunteer-predictor:${{ github.sha }}
        
        echo ""
        echo "✅ Docker images pushed successfully!"
        echo "  - latest tag"
        echo "  - ${{ github.sha }} tag"
        
    - name: Generate Deployment Summary
      if: success()
      run: |
        MODEL_R2=$(python3 -c "import json; print(json.load(open('metrics/metrics.json'))['r2'])")
        MODEL_MAE=$(python3 -c "import json; print(json.load(open('metrics/metrics.json'))['mae'])")
        
        cat > deployment-summary.md << EOF
        # 🚀 Deployment Summary
        
        ## Build Information
        - **Git Commit**: ${{ github.sha }}
        - **Build Time**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        - **Triggered By**: ${{ github.actor }}
        
        ## Model Performance
        - **R² Score**: ${MODEL_R2}
        - **MAE**: ${MODEL_MAE}
        - **Status**: ✅ Validated and Ready for Deployment
        
        ## Docker Image
        - **Repository**: 632676638228.dkr.ecr.ap-south-1.amazonaws.com/volunteer-predictor
        - **Tags**: latest, ${{ github.sha }}
        - **Region**: ap-south-1
        
        ## Next Steps
        Pull and deploy the latest image:
        \`\`\`bash
        docker pull 632676638228.dkr.ecr.ap-south-1.amazonaws.com/volunteer-predictor:latest
        \`\`\`
        EOF
        
        cat deployment-summary.md
        
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: model-metrics-${{ github.sha }}
        path: |
          metrics/
          deployment-summary.md
